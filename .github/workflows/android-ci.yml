name: Android CI and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build_variant:
        description: 'Build variant to compile (e.g., Debug, Release)'
        required: true
        default: 'Release'
        type: choice
        options:
          - Release
          - Debug

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Accept Android SDK licenses
        run: |
          if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" ]; then
            yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          elif [ -d "$ANDROID_HOME/tools/bin" ]; then
            yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
          else
            echo "Could not find sdkmanager"
            exit 1
          fi

      - name: Ensure gradlew is executable
        run: chmod +x ./gradlew

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.2'

      - name: Build with Gradle
        env:
          BUILD_VARIANT_INPUT: ${{ github.event.inputs.build_variant || 'Release' }}
        run: ./gradlew :app:assemble${{ env.BUILD_VARIANT_INPUT }} --no-daemon
        # If gradlew is inside subfolder, add working-directory like:
        # working-directory: ./app

      - name: Create Release Tag
        id: create_tag
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_variant == 'Release')
        run: echo "TAG_NAME=release-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_variant == 'Release')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (APK)
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_variant == 'Release')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/${{ github.event.inputs.build_variant || 'release' | toLowerCase }}/app-${{ github.event.inputs.build_variant || 'release' | toLowerCase }}.apk
          asset_name: MusicPlayer-${{ env.TAG_NAME }}-${{ github.event.inputs.build_variant || 'release' | toLowerCase }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Release Asset (AAB)
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_variant == 'Release')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/bundle/${{ github.event.inputs.build_variant || 'release' | toLowerCase }}/app-${{ github.event.inputs.build_variant || 'release' | toLowerCase }}.aab
          asset_name: MusicPlayer-${{ env.TAG_NAME }}-${{ github.event.inputs.build_variant || 'release' | toLowerCase }}.aab
          asset_content_type: application/zip
