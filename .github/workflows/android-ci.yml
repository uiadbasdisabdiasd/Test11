name: Android CI and Release

on:
  push:
    branches:
      - main # Or your default/release branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Or 'adopt' or other JDK provider
          java-version: '17' # Ensure this matches your project's Java version

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        # with:
        #   api-level: 34 # Optional: specify API level
        #   ndk-version: # Optional: specify NDK version if needed
        #   cmake-version: # Optional: specify CMake version if needed

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || true # Fallback for older SDK tools path
        # For newer command-line tools, it might be:
        # run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true
        # Or more robustly, find sdkmanager in cmdline-tools
        # run: |
        #   yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || \
        #   yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --licenses

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.2' # Specify a recent, compatible Gradle version. Check project's build.gradle for hints if any.

      - name: Build with Gradle (Release)
        run: gradle :app:assembleRelease --no-daemon
        # Add --no-daemon to ensure Gradle exits cleanly in CI environments.
        # Note: This assumes you have set up signing configurations in your app's build.gradle.
        # If not, this will build an unsigned release APK/AAB.
        # For a signed release, you'd need to handle keystore and credentials securely.

      - name: Create Release Tag
        id: create_tag
        run: echo "TAG_NAME=release-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (APK)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk # Adjust path if necessary (e.g., for AAB or different flavor)
          asset_name: MusicPlayer-${{ env.TAG_NAME }}.apk
          asset_content_type: application/vnd.android.package-archive

      # Uncomment to upload AAB as well
      # - name: Upload Release Asset (AAB)
      #   if: success() && steps.create_release.outputs.upload_url
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./app/build/outputs/bundle/release/app-release.aab
      #     asset_name: MusicPlayer-${{ env.TAG_NAME }}.aab
      #     asset_content_type: application/vnd.android.package-archive
